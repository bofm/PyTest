============================= test session starts =============================
platform win32 -- Python 2.7.11, pytest-3.0.5, py-1.4.32, pluggy-0.4.0
rootdir: C:\Users\c-flo\Dropbox\Dev\mockito-python, inifile:
plugins: xdist-1.15.0
collected 57 items

mockito\tests\instancemethods_test.py ..............................FF..FF.FFFF.FF.F......FF...

================================== FAILURES ===================================
____________ TestEnsureStubsAreUsed.testPassUsedOnceImplicitAnswer ____________

self = <mockito.tests.instancemethods_test.TestEnsureStubsAreUsed instance at 0x0000000004234288>

    def testPassUsedOnceImplicitAnswer(self):
        when(Dog).bark('Miau')
        rex = Dog()
        rex.bark('Miau')
>       verifyStubbedInvocationsAreUsed(Dog)

rex        = <mockito.tests.instancemethods_test.Dog object at 0x000000000432BEF0>
self       = <mockito.tests.instancemethods_test.TestEnsureStubsAreUsed instance at 0x0000000004234288>

mockito\tests\instancemethods_test.py:274:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

objs = (<class 'mockito.tests.instancemethods_test.Dog'>,)
theMocks = [<mockito.mocking.Mock object at 0x000000000432BEB8>]
mock = <mockito.mocking.Mock object at 0x000000000432BEB8>, i = bark('Miau')

    def verifyStubbedInvocationsAreUsed(*objs):
        """Ensure stubs are actually used.

        This functions just ensures that stubbed methods are actually used. Its
        purpose is to detect interface changes after refactorings. It is meant
        to be invoked usually without arguments just before :func:`unstub`.

        """
        if objs:
            theMocks = map(_get_mock_or_raise, objs)
        else:
            theMocks = mock_registry.get_registered_mocks()


        for mock in theMocks:
            for i in mock.stubbed_invocations:
                if not i.allow_zero_invocations and i.used < len(i.answers):
>                   raise VerificationError("\nUnused stub: %s" % i)
E                   VerificationError:
E                   Unused stub: bark('Miau')

i          = bark('Miau')
mock       = <mockito.mocking.Mock object at 0x000000000432BEB8>
objs       = (<class 'mockito.tests.instancemethods_test.Dog'>,)
theMocks   = [<mockito.mocking.Mock object at 0x000000000432BEB8>]

mockito\mockito.py:407: VerificationError
 TestImplicitVerificationsUsingExpect.testFailImmediatelyIfWantedCountExceeds[times]

self = <mockito.tests.instancemethods_test.TestImplicitVerificationsUsingExpect instance at 0x00000000043E6A88>
verification = {'times': 2}

    def testFailImmediatelyIfWantedCountExceeds(self, verification):
        rex = Dog()
        expect(rex, **verification).bark('Miau').thenReturn('Wuff')
        rex.bark('Miau')
        rex.bark('Miau')

        with pytest.raises(InvocationError):
>           rex.bark('Miau')
E           Failed: DID NOT RAISE <class 'mockito.invocation.InvocationError'>

rex        = <mockito.tests.instancemethods_test.Dog object at 0x0000000004361B70>
self       = <mockito.tests.instancemethods_test.TestImplicitVerificationsUsingExpect instance at 0x00000000043E6A88>
verification = {'times': 2}

mockito\tests\instancemethods_test.py:341: Failed
 TestImplicitVerificationsUsingExpect.testNoUnwantedInteractionsWorksPefectlyWell[times]

self = <mockito.tests.instancemethods_test.TestImplicitVerificationsUsingExpect instance at 0x0000000004285D08>
verification = {'times': 2}

    def testNoUnwantedInteractionsWorksPefectlyWell(self, verification):
        rex = Dog()
        expect(rex, **verification).bark('Miau').thenReturn('Wuff')
        rex.bark('Miau')
        rex.bark('Miau')

        print('Hi')

>       verifyNoUnwantedInteractions(rex)

rex        = <mockito.tests.instancemethods_test.Dog object at 0x00000000043380F0>
self       = <mockito.tests.instancemethods_test.TestImplicitVerificationsUsingExpect instance at 0x0000000004285D08>
verification = {'times': 2}

mockito\tests\instancemethods_test.py:359:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
mockito\mockito.py:388: in verifyNoUnwantedInteractions
    i.verify()
mockito\invocation.py:340: in verify
    self.verification.verify(self, actual_count)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <Times wanted=2>, invocation = bark('Miau'), actual_count = 0

    def verify(self, invocation, actual_count):
        if actual_count == self.wanted_count:
                return
        if actual_count == 0:
            raise VerificationError("\nWanted but not invoked: %s"
>                                   % (invocation))
E           VerificationError:
E           Wanted but not invoked: bark('Miau')

actual_count = 0
invocation = bark('Miau')
self       = <Times wanted=2>

mockito\verification.py:80: VerificationError
---------------------------- Captured stdout call -----------------------------
Hi
==================== 3 failed, 44 passed in 0.68 seconds =====================
